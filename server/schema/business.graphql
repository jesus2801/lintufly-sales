type Query {
  allBusiness(page: Int!): AllBusinessResponse!
  getBusiness(_id: ID!): Business
  getBusinessWithCode(code: String!): Business
  searchBusiness(input: SearchBusinessInput!): AllBusinessResponse!
}

type Mutation {
  createBusiness(business: BusinessInput!, admin: AdminInput!): String
  updateBusiness(input: UpdateBusiness!): Boolean
  deleteBusiness(_id: ID!): Boolean
}

input AdminInput {
  name: String!
  mail: String!
  pass: String!
}

input SearchBusinessInput {
  name: String!
  page: Int!
}

type AllBusinessResponse {
  docs: [Business!]!
  totalDocs: Int!
  limit: Int!
  page: Int
  totalPages: Int!
  hasNextPage: Boolean!
  nextPage: Int
  hasPrevPage: Boolean!
  prevPage: Int
  pagingCounter: Int!
}

input UpdateBusiness {
  _id: ID!
  updates: BusinessUpdates!
}

input BusinessUpdates {
  name: String
  mail: String
  currency: String
  phones: [String!]
  imgs: [String!]
}

input BusinessInput {
  name: String!
  mail: String!
  currency: String!
  phones: [String!]!
  imgs: [String!]!
}

type Business {
  _id: ID!
  name: String!
  mail: String!
  currency: String!
  phones: [String!]!
  union: Float!
  imgs: [String!]!
}
